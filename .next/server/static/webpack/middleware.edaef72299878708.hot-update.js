"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"(middleware)/./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n// import { createMiddlewareClient } from '@supabase/auth-helpers-nextjs';\n// import { NextResponse } from 'next/server';\n// import type { NextRequest } from 'next/server';\n// import type { Database } from '@/lib/database.types'\n// export async function middleware(req: NextRequest) {\n//     // We need to create a response and hand it to the supabase client to be able to modify the response headers.\n//   const res = NextResponse.next();\n//   // Create authenticated Supabase Client.\n//   const supabase = createMiddlewareClient<Database>({ req, res });\n//   // check to see if we have session\n//   const session = await supabase.auth.getSession()\n//   console.log('session', session);\n//   // The getSession function must be called for any Server Component routes that use a Supabase client.\n//   //   get user and verify that there is authenticated supabase user\n//   const {\n//     data: { user }\n//   } = await supabase.auth.getUser();\n//   console.log('user', user)\n//   // if user is signed in and the current path is / redirect the user to /account\n//   if (!session.user.user_name) {\n//     return NextResponse.redirect(new URL('/welcome', req.url));\n//   }\n//   if (session?.user.user_name) {\n//     return NextResponse.redirect(new URL('/dashboard', req.url));\n//   }\n//   // if user is not signed in and the current path is not / redirect the user to /\n//   const redirectUrl = req.nextUrl.clone()\n//   redirectUrl.pathname = '/'\n//   redirectUrl.searchParams.set(`redirectedFrom`, req.nextUrl.pathname)\n//   return NextResponse.redirect(redirectUrl)\n//   return res;\n//   }\n// export const config = {\n//   matcher: ['/dashboard', '/welcome', '/chat', '/auth/signin']\n// };\n\n\nasync function middleware(req) {\n    const res = next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].next();\n    const supabase = (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__.createMiddlewareClient)({\n        req,\n        res\n    });\n    const session = await supabase.auth.getSession();\n    console.log(\"session\", session);\n    return res;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbWlkZGxld2FyZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsMEVBQTBFO0FBQzFFLDhDQUE4QztBQUU5QyxrREFBa0Q7QUFDbEQsdURBQXVEO0FBRXZELHVEQUF1RDtBQUN2RCxvSEFBb0g7QUFDcEgscUNBQXFDO0FBQ3JDLDZDQUE2QztBQUM3QyxxRUFBcUU7QUFDckUsdUNBQXVDO0FBQ3ZDLHFEQUFxRDtBQUNyRCxxQ0FBcUM7QUFDckMsMEdBQTBHO0FBRTFHLHVFQUF1RTtBQUN2RSxZQUFZO0FBQ1oscUJBQXFCO0FBQ3JCLHVDQUF1QztBQUN2Qyw4QkFBOEI7QUFFOUIsb0ZBQW9GO0FBQ3BGLG1DQUFtQztBQUNuQyxrRUFBa0U7QUFDbEUsTUFBTTtBQUVOLG1DQUFtQztBQUNuQyxvRUFBb0U7QUFDcEUsTUFBTTtBQUNOLHFGQUFxRjtBQUNyRiw0Q0FBNEM7QUFDNUMsK0JBQStCO0FBQy9CLHlFQUF5RTtBQUN6RSw4Q0FBOEM7QUFDOUMsZ0JBQWdCO0FBQ2hCLE1BQU07QUFHTiwwQkFBMEI7QUFDMUIsaUVBQWlFO0FBQ2pFLEtBQUs7QUFFaUU7QUFDNUI7QUFLbkMsZUFBZUUsV0FBV0MsR0FBZ0I7SUFDL0MsTUFBTUMsTUFBTUgsa0ZBQVlBLENBQUNJLElBQUk7SUFDN0IsTUFBTUMsV0FBV04scUZBQXNCQSxDQUFXO1FBQUVHO1FBQUtDO0lBQUk7SUFDN0QsTUFBTUcsVUFBVSxNQUFNRCxTQUFTRSxJQUFJLENBQUNDLFVBQVU7SUFDOUNDLFFBQVFDLEdBQUcsQ0FBQyxXQUFXSjtJQUN2QixPQUFPSDtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL21pZGRsZXdhcmUudHM/NDIyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBjcmVhdGVNaWRkbGV3YXJlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL2F1dGgtaGVscGVycy1uZXh0anMnO1xuLy8gaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuXG4vLyBpbXBvcnQgdHlwZSB7IE5leHRSZXF1ZXN0IH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuLy8gaW1wb3J0IHR5cGUgeyBEYXRhYmFzZSB9IGZyb20gJ0AvbGliL2RhdGFiYXNlLnR5cGVzJ1xuXG4vLyBleHBvcnQgYXN5bmMgZnVuY3Rpb24gbWlkZGxld2FyZShyZXE6IE5leHRSZXF1ZXN0KSB7XG4vLyAgICAgLy8gV2UgbmVlZCB0byBjcmVhdGUgYSByZXNwb25zZSBhbmQgaGFuZCBpdCB0byB0aGUgc3VwYWJhc2UgY2xpZW50IHRvIGJlIGFibGUgdG8gbW9kaWZ5IHRoZSByZXNwb25zZSBoZWFkZXJzLlxuLy8gICBjb25zdCByZXMgPSBOZXh0UmVzcG9uc2UubmV4dCgpO1xuLy8gICAvLyBDcmVhdGUgYXV0aGVudGljYXRlZCBTdXBhYmFzZSBDbGllbnQuXG4vLyAgIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlTWlkZGxld2FyZUNsaWVudDxEYXRhYmFzZT4oeyByZXEsIHJlcyB9KTtcbi8vICAgLy8gY2hlY2sgdG8gc2VlIGlmIHdlIGhhdmUgc2Vzc2lvblxuLy8gICBjb25zdCBzZXNzaW9uID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRTZXNzaW9uKClcbi8vICAgY29uc29sZS5sb2coJ3Nlc3Npb24nLCBzZXNzaW9uKTtcbi8vICAgLy8gVGhlIGdldFNlc3Npb24gZnVuY3Rpb24gbXVzdCBiZSBjYWxsZWQgZm9yIGFueSBTZXJ2ZXIgQ29tcG9uZW50IHJvdXRlcyB0aGF0IHVzZSBhIFN1cGFiYXNlIGNsaWVudC5cblxuLy8gICAvLyAgIGdldCB1c2VyIGFuZCB2ZXJpZnkgdGhhdCB0aGVyZSBpcyBhdXRoZW50aWNhdGVkIHN1cGFiYXNlIHVzZXJcbi8vICAgY29uc3Qge1xuLy8gICAgIGRhdGE6IHsgdXNlciB9XG4vLyAgIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLmdldFVzZXIoKTtcbi8vICAgY29uc29sZS5sb2coJ3VzZXInLCB1c2VyKVxuXG4vLyAgIC8vIGlmIHVzZXIgaXMgc2lnbmVkIGluIGFuZCB0aGUgY3VycmVudCBwYXRoIGlzIC8gcmVkaXJlY3QgdGhlIHVzZXIgdG8gL2FjY291bnRcbi8vICAgaWYgKCFzZXNzaW9uLnVzZXIudXNlcl9uYW1lKSB7XG4vLyAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKCcvd2VsY29tZScsIHJlcS51cmwpKTtcbi8vICAgfVxuXG4vLyAgIGlmIChzZXNzaW9uPy51c2VyLnVzZXJfbmFtZSkge1xuLy8gICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QobmV3IFVSTCgnL2Rhc2hib2FyZCcsIHJlcS51cmwpKTtcbi8vICAgfVxuLy8gICAvLyBpZiB1c2VyIGlzIG5vdCBzaWduZWQgaW4gYW5kIHRoZSBjdXJyZW50IHBhdGggaXMgbm90IC8gcmVkaXJlY3QgdGhlIHVzZXIgdG8gL1xuLy8gICBjb25zdCByZWRpcmVjdFVybCA9IHJlcS5uZXh0VXJsLmNsb25lKClcbi8vICAgcmVkaXJlY3RVcmwucGF0aG5hbWUgPSAnLydcbi8vICAgcmVkaXJlY3RVcmwuc2VhcmNoUGFyYW1zLnNldChgcmVkaXJlY3RlZEZyb21gLCByZXEubmV4dFVybC5wYXRobmFtZSlcbi8vICAgcmV0dXJuIE5leHRSZXNwb25zZS5yZWRpcmVjdChyZWRpcmVjdFVybClcbi8vICAgcmV0dXJuIHJlcztcbi8vICAgfVxuXG5cbi8vIGV4cG9ydCBjb25zdCBjb25maWcgPSB7XG4vLyAgIG1hdGNoZXI6IFsnL2Rhc2hib2FyZCcsICcvd2VsY29tZScsICcvY2hhdCcsICcvYXV0aC9zaWduaW4nXVxuLy8gfTtcblxuaW1wb3J0IHsgY3JlYXRlTWlkZGxld2FyZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9hdXRoLWhlbHBlcnMtbmV4dGpzJ1xuaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5cbmltcG9ydCB0eXBlIHsgTmV4dFJlcXVlc3QgfSBmcm9tICduZXh0L3NlcnZlcidcbmltcG9ydCB0eXBlIHsgRGF0YWJhc2UgfSBmcm9tICdAL2xpYi9kYXRhYmFzZS50eXBlcydcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxOiBOZXh0UmVxdWVzdCkge1xuICBjb25zdCByZXMgPSBOZXh0UmVzcG9uc2UubmV4dCgpXG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlTWlkZGxld2FyZUNsaWVudDxEYXRhYmFzZT4oeyByZXEsIHJlcyB9KVxuICBjb25zdCBzZXNzaW9uID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRTZXNzaW9uKClcbiAgY29uc29sZS5sb2coJ3Nlc3Npb24nLCBzZXNzaW9uKVxuICByZXR1cm4gcmVzXG59Il0sIm5hbWVzIjpbImNyZWF0ZU1pZGRsZXdhcmVDbGllbnQiLCJOZXh0UmVzcG9uc2UiLCJtaWRkbGV3YXJlIiwicmVxIiwicmVzIiwibmV4dCIsInN1cGFiYXNlIiwic2Vzc2lvbiIsImF1dGgiLCJnZXRTZXNzaW9uIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});